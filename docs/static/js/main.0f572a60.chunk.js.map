{"version":3,"sources":["components/Card.jsx","components/Cards.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","lang","img","fcolor","scolor","console","log","PropTypes","className","style","background","src","alt","Cards","Fragment","map","url","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAwBeA,EAfF,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,IAAKC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAK/B,OAFAC,QAAQC,IAAIC,KAGR,sBAAKC,UAAU,OAAOC,MAAO,CACzBC,WAAW,4BAAD,OAA8BP,EAA9B,YAAwCC,EAAxC,MADd,UAGI,qBAAKO,IAAKT,EAAKU,IAAI,YACnB,6BAAKX,QC+BFY,EA5CM,WAiCjB,OACI,cAAC,IAAMC,SAAP,UA9BS,CACT,CACI,KAAQ,SACR,IAAO,2CACP,OAAU,UACV,OAAU,WAEd,CACI,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,WAEd,CACI,KAAQ,QACR,IAAO,0CACP,OAAU,UACV,OAAU,WAEd,CACI,KAAQ,OACR,IAAO,yCACP,OAAU,UACV,OAAU,YAUDC,KAAI,YAAoC,IAAjCd,EAAgC,EAAhCA,KAAMe,EAA0B,EAA1BA,IAAKb,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OAC3B,OAAO,cAAC,EAAD,CAAiBH,KAAMA,EAAMC,IAAKc,EAAKb,OAAQA,EAAQC,OAAQA,GAApDH,SCpCvBgB,EAJH,WACV,OAAO,cAAC,EAAD,KCOMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0f572a60.chunk.js","sourcesContent":["//Los props nos permiten establecer la comunicacion directa entre componentes\r\nimport React from \"react\"\r\n\r\n//Importamos una libreria que nos permite filtrar los tipos de propiedades\r\nimport PropTypes from \"prop-types\";\r\n\r\n//Como importar CSS \r\nimport \"./Card.css\"\r\n\r\nconst Card = ({ lang, img, fcolor, scolor }) => {\r\n\r\n    //Uso de la libreria de Prop Types\r\n    console.log(PropTypes);\r\n\r\n    return (\r\n        <div className=\"card\" style={{\r\n            background: `linear-gradient(to left, ${fcolor},${scolor})`, /* fallback for old browsers */\r\n        }}>\r\n            <img src={img} alt=\"lang.sv\"></img>\r\n            <h3>{lang}</h3>\r\n        </div >\r\n    );\r\n};\r\n\r\nexport default Card;\r\n\r\n","import React from 'react'\r\nimport Card from \"./Card\"\r\n\r\n//Aqui se importa el componente de Card \r\n//El app.js funciona como nuestro index \r\n\r\nexport const Cards = () => {\r\n\r\n    //Usaremos el archivo JSON mediante una constante llamada data donde le \r\n    //pasamos todo lo que obtuvimo del archivo cards.json\r\n    const data = [\r\n        {\r\n            \"lang\": \"Python\",\r\n            \"url\": \"https://cdn.svgporn.com/logos/python.svg\",\r\n            \"fcolor\": \"#00c3ff\",\r\n            \"scolor\": \"#ffff1c\"\r\n        },\r\n        {\r\n            \"lang\": \"Java\",\r\n            \"url\": \"https://cdn.svgporn.com/logos/java.svg\",\r\n            \"fcolor\": \"#D31027\",\r\n            \"scolor\": \"#EA384D\"\r\n        },\r\n        {\r\n            \"lang\": \"React\",\r\n            \"url\": \"https://cdn.svgporn.com/logos/react.svg\",\r\n            \"fcolor\": \"#000428\",\r\n            \"scolor\": \"#004e92\"\r\n        },\r\n        {\r\n            \"lang\": \"Perl\",\r\n            \"url\": \"https://cdn.svgporn.com/logos/perl.svg\",\r\n            \"fcolor\": \"#cc2b5e\",\r\n            \"scolor\": \"#753a88\"\r\n        }\r\n    ];\r\n\r\n    //Uso de los Fragmentos para reutilizar componentes\r\n    //poner las etiquetas vacias nos permite poner lo mismo que si se usan fragmentos \r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                //Uso de llaves (keys) para obtener lo que trae cada objeto en el JSON\r\n                data.map(({ lang, url, fcolor, scolor }) => {\r\n                    return <Card key={lang} lang={lang} img={url} fcolor={fcolor} scolor={scolor} />;\r\n                })}\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default Cards;\r\n","//Funciona como nuestro main\n\nimport Cards from \"./components/Cards\"\n\nconst App = () => {\n  return <Cards />\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}